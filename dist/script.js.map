{"version":3,"sources":["script.js"],"names":["lettersPattern","currentGuessCount","currentGuess","document","querySelector","words","solution","Math","floor","random","length","gameDone","updateCurrentGuess","checkWin","querySelectorAll","forEach","button","addEventListener","e","currentTarget","removeEventListener","type","buttonpress","target","innerText","toLowerCase","test","dataset","letters","updateLetters","deleteFromLetters","_loop","i","setTimeout","compareLetters","keypress","key","_loop2","alert","position","guessedWord","charAt","solutionWord","currentTile","buttonLetter","getElementById","classList","remove","add","toUpperCase","includes","letter","newLetters","updateTiles","tileNumber","oldLetters","slice","deleteFromTiles"],"mappings":"AAAA,aAAA,IAAMA,eAAiB,YACnBC,kBAAoB,EACpBC,aAAeC,SAASC,cAAc,SAAWH,mBAC/CI,MAAQ,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAC3FC,SAAYD,MAAME,KAAKC,MAAMD,KAAKE,SAASJ,MAAMK,SACjDC,UAAW,EAGTC,mBAAqB,WAC1BX,oBACAY,WACAX,aAAeC,SAASC,cAAc,SAAWH,oBAIlDE,SAASW,iBAAiB,UAAUC,SAAQ,SAAAC,GAC3CA,EAAOC,iBAAiB,SAAS,SAACC,GAC9BP,UAAWO,EAAEC,cAAcC,oBAAoBF,EAAEG,KAAML,GAE1D,IAAIM,EAAcJ,EAAEK,OAAOC,UAAUC,cACrC,GAAyB,GAAtBH,EAAYZ,QAAeV,eAAe0B,KAAKJ,IAAgBpB,aAAayB,QAAQC,QAAQlB,OAAS,EACvGmB,cAAcP,QAER,GAAkB,OAAfA,GAAwD,IAAhCpB,aAAayB,QAAQC,QACtDE,yBAEM,GAAkB,SAAfR,GAAiE,GAAvCpB,aAAayB,QAAQC,QAAQlB,OAAa,CAE7E,IAF6E,IAAAqB,EAAA,SAErEC,GACPC,YAAW,WACVC,eAAeF,KACX,IAAFA,IAHIA,EAAE,EAAGA,EAAE,EAAGA,IAAKD,EAAfC,GAKRC,YAAW,WACVrB,uBACE,aAMNT,SAASc,iBAAiB,WAAW,SAACC,GAClCP,UAAWO,EAAEC,cAAcC,oBAAoBF,EAAEG,MAEpD,IAAIc,EAAWjB,EAAEkB,IACjB,GAAsB,GAAnBD,EAASzB,QAAeV,eAAe0B,KAAKR,EAAEkB,MAAQlC,aAAayB,QAAQC,QAAQlB,OAAS,EAC9FmB,cAAcM,QAER,GAAY,aAATjB,EAAEkB,KAAsD,IAAhClC,aAAayB,QAAQC,QACtDE,yBAEM,GAAY,SAATZ,EAAEkB,KAAkBpC,eAAe0B,KAAKR,EAAEkB,MAA+C,GAAvClC,aAAayB,QAAQC,QAAQlB,OAAa,CAErG,IAFqG,IAAA2B,EAAA,SAE7FL,GACPC,YAAW,WACVC,eAAeF,KACX,IAAFA,IAHIA,EAAE,EAAGA,EAAE,EAAGA,IAAKK,EAAfL,GAKRC,YAAW,WACVrB,uBACE,UAKL,IAAMC,SAAW,WACbP,UAAYJ,aAAayB,QAAQC,SACnCU,MAAM,mBACN3B,UAAW,GACmB,GAArBV,mBACTqC,MAAM,qBAAuBhC,WAKzB4B,eAAiB,SAACK,GACvB,IAAIC,EAActC,aAAayB,QAAQC,QAAQa,OAAO,CAACF,IACnDG,EAAepC,SAASmC,OAAOF,GAC/BI,EAAczC,aAAaE,cAAc,cAAgBmC,EAAS,IAClEK,EAAezC,SAAS0C,eAAeL,GAAahB,UACxDmB,EAAYG,UAAUC,OAAO,SAC7BJ,EAAYG,UAAUE,IAAI,WACvBN,GAAgBF,GAClBP,YAAW,WACVU,EAAYG,UAAUE,IAAI,aACxB,KACAJ,GAAgBJ,EAAYS,eAC9B9C,SAAS0C,eAAeL,GAAaM,UAAUE,IAAI,YAE3C1C,SAAS4C,SAASV,GAC3BP,YAAW,WACVU,EAAYG,UAAUE,IAAI,aACxB,MAEHf,YAAW,WACVU,EAAYG,UAAUE,IAAI,YACxB,KACAJ,GAAgBJ,EAAYS,eAC9B9C,SAAS0C,eAAeL,GAAaM,UAAUE,IAAI,WAGrDL,EAAYG,UAAUC,OAAO,WAC7Bd,YAAW,WACVU,EAAYG,UAAUE,IAAI,cACxB,KACHL,EAAYG,UAAUC,OAAO,aAIxBlB,cAAgB,SAACsB,GACtB,IACIC,EADalD,aAAayB,QAAQC,QACRuB,EAC1BR,EAAcS,EAAW1C,OAC7BR,aAAayB,QAAQC,QAAUwB,EAC/BC,YAAYV,EAAaQ,IAIpBE,YAAc,SAACC,EAAYH,GAChC,IAAIR,EAAczC,aAAaE,cAAc,aAAekD,GAC5DX,EAAYhB,QAAQwB,OAASA,EAC7BR,EAAYnB,UAAY2B,EACxBR,EAAYG,UAAUE,IAAI,SAC1BL,EAAYG,UAAUE,IAAI,eAIrBlB,kBAAoB,WACzB,IAAIyB,EAAarD,aAAayB,QAAQC,QAClCwB,EAAaG,EAAWC,MAAM,GAAI,GACtCtD,aAAayB,QAAQC,QAAUwB,EAC/BK,gBAAgBF,EAAW7C,SAItB+C,gBAAkB,SAACH,GACxB,IAAIX,EAAczC,aAAaE,cAAc,aAAekD,GAC5DX,EAAYnB,UAAY,GACxBmB,EAAYhB,QAAQwB,OAAS,GAC7BR,EAAYG,UAAUC,OAAO,SAC7BJ,EAAYG,UAAUC,OAAO","file":"script.js","sourcesContent":["const lettersPattern = /[ñA-Za-z]/;\r\nlet currentGuessCount = 1;\r\nlet currentGuess = document.querySelector('#guess' + currentGuessCount);\r\nconst words = ['tinta','abeja','acoso','caliz','calvo','oruga','hueso','zurdo','busto','queso','guiño'];\r\nlet solution =  words[Math.floor(Math.random()*words.length)];\r\nlet gameDone = false;\r\n\r\n//move on to the next row after guess submitted\r\nconst updateCurrentGuess = () => {\r\n\tcurrentGuessCount++;\r\n\tcheckWin();\r\n\tcurrentGuess = document.querySelector('#guess' + currentGuessCount);\r\n};\r\n\r\n//detect virtual keyboard click (letter, del, enter)\r\ndocument.querySelectorAll(\"button\").forEach(button => {\r\n\tbutton.addEventListener('click', (e) => {\r\n\t\tif(gameDone) {e.currentTarget.removeEventListener(e.type, button);}\r\n\t\t// If buttonpress is string of length 1, and is a letter\r\n\t\tlet buttonpress = e.target.innerText.toLowerCase();\r\n\t\tif(buttonpress.length == 1 && lettersPattern.test(buttonpress) && currentGuess.dataset.letters.length < 5) {\r\n\t\t\tupdateLetters(buttonpress);\r\n\t\t// If backspace\r\n\t\t} else if(buttonpress == 'del' && currentGuess.dataset.letters != \"\") {\r\n\t\t\tdeleteFromLetters();\r\n\t\t// If entera\r\n\t\t} else if(buttonpress == 'enter' && currentGuess.dataset.letters.length == 5) {\r\n\t\t\t//Check letter to solution\r\n\t\t\tfor(let i=0; i<5; i++) {\t\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tcompareLetters(i);\r\n\t\t\t\t}, i*300);\r\n\t\t\t}\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tupdateCurrentGuess();\r\n\t\t\t}, 1600);\r\n\t\t}\r\n\t});\r\n});\r\n\r\n//detect keypress (letter, backspace, other)\r\ndocument.addEventListener('keydown', (e) => {\r\n\tif(gameDone) {e.currentTarget.removeEventListener(e.type);}\r\n\t// If keypress is string of length 1, and is a letter\r\n\tlet keypress = e.key;\r\n\tif(keypress.length == 1 && lettersPattern.test(e.key) && currentGuess.dataset.letters.length < 5) {\r\n\t\tupdateLetters(keypress);\r\n\t// If backspace\r\n\t} else if(e.key == 'Backspace' && currentGuess.dataset.letters != \"\") {\r\n\t\tdeleteFromLetters();\r\n\t// If enter\r\n\t} else if(e.key == 'Enter' && lettersPattern.test(e.key) && currentGuess.dataset.letters.length == 5) {\r\n\t\t//Check letter to solution\r\n\t\tfor(let i=0; i<5; i++) {\t\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tcompareLetters(i);\r\n\t\t\t}, i*300);\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tupdateCurrentGuess();\r\n\t\t}, 1600);\r\n\t}\r\n});\r\n\r\n//check if answer is correct\r\nconst checkWin = () => {\r\n\tif(solution == currentGuess.dataset.letters) {\r\n\t\talert(\"GANASTEEEEEEEE!\");\r\n\t\tgameDone = true;\r\n\t} else if(currentGuessCount == 7) {\r\n\t\talert('La respuesta era: ' + solution);\r\n\t} \r\n};\r\n\r\n//compare solution to submitted word\r\nconst compareLetters = (position) => {\r\n\tlet guessedWord = currentGuess.dataset.letters.charAt([position]);\r\n\tlet solutionWord = solution.charAt(position);\r\n\tlet currentTile = currentGuess.querySelector('#guessTile' + (position+1));\r\n\tlet buttonLetter = document.getElementById(guessedWord).innerText;\r\n\tcurrentTile.classList.remove('blink');\r\n\tcurrentTile.classList.add(\"flip-in\");\r\n\tif(solutionWord == guessedWord) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tcurrentTile.classList.add(\"correct\");\r\n\t\t}, 250);\r\n\t\tif(buttonLetter == guessedWord.toUpperCase()) {\r\n\t\t\tdocument.getElementById(guessedWord).classList.add(\"correct\");\r\n\t\t}\r\n\t} else if(solution.includes(guessedWord)) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tcurrentTile.classList.add(\"present\");\r\n\t\t}, 250);\r\n\t} else {\r\n\t\tsetTimeout(() => {\r\n\t\t\tcurrentTile.classList.add(\"absent\");\r\n\t\t}, 250);\r\n\t\tif(buttonLetter == guessedWord.toUpperCase()) {\r\n\t\t\tdocument.getElementById(guessedWord).classList.add(\"absent\");\r\n\t\t}\r\n\t} \r\n\tcurrentTile.classList.remove(\"flip-in\");\r\n\tsetTimeout(() => {\r\n\t\tcurrentTile.classList.add(\"flip-out\");\r\n\t}, 250);\r\n\tcurrentTile.classList.remove(\"flip-out\");\r\n};\r\n\r\n//update \"letters\"\r\nconst updateLetters = (letter) => {\r\n\tlet oldLetters = currentGuess.dataset.letters;\r\n\tlet newLetters = oldLetters + letter;\r\n\tlet currentTile = newLetters.length;\r\n\tcurrentGuess.dataset.letters = newLetters;\r\n\tupdateTiles(currentTile, letter);\r\n};\r\n\r\n//update tile markup\r\nconst updateTiles = (tileNumber, letter) => {\r\n\tlet currentTile = currentGuess.querySelector('#guessTile' + tileNumber);\r\n\tcurrentTile.dataset.letter = letter;\r\n\tcurrentTile.innerText = letter;\r\n\tcurrentTile.classList.add('blink');\r\n\tcurrentTile.classList.add('has-letter');\r\n};\r\n\r\n//delete last letter from letters\r\nconst deleteFromLetters = () => {\r\n\tlet oldLetters = currentGuess.dataset.letters;\r\n\tlet newLetters = oldLetters.slice(0, -1);\r\n\tcurrentGuess.dataset.letters = newLetters;\r\n\tdeleteFromTiles(oldLetters.length);\r\n};\r\n\r\n//delete last letter from tiles\r\nconst deleteFromTiles = (tileNumber) => {\r\n\tlet currentTile = currentGuess.querySelector('#guessTile' + tileNumber);\r\n\tcurrentTile.innerText = '';\r\n\tcurrentTile.dataset.letter = '';\r\n\tcurrentTile.classList.remove('blink');\r\n\tcurrentTile.classList.remove('has-letter');\r\n};"]}